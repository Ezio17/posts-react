{"version":3,"sources":["components/Title.jsx","components/posts/posts_components/PostsTable.jsx","components/posts/posts_components/PostsModalComment.jsx","components/posts/posts_components/UserModal.jsx","components/posts/Posts.jsx","components/create-post/CreatePostButton.jsx","components/HomePage.jsx","components/posts/posts_components/Post.jsx","components/create-post/CreatePost.jsx","App.js","serviceWorker.js","index.js"],"names":["Title","props","react_default","a","createElement","className","children","PostsTable","posts","map","post","key","id","react_router_dom","to","concat","title","onClick","openCommentModal","openUserModal","userId","PostModalComment","postComments","comment","email","body","UserModal","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","addressVisibility","companyVisibility","companyVisibilityInfo","bind","assertThisInitialized","addressVisibilityInfo","setState","prevState","_this2","_this$state","addressInfoStyle","companyInfoStyle","userInfo","user","name","username","phone","website","address","city","geo","lat","lng","street","suite","zipcode","company","closeModal","type","React","Component","customStyles","content","top","left","right","bottom","marginRight","transform","width","height","Modal","setAppElement","Posts","postsLoad","postCommentsLoad","modalCommentsIsOpen","modalUserIsOpen","modalUserLoad","pageCount","page","baseURL","closeCommentModal","closeUserModal","handlePageClick","fetch","then","response","json","length","prevProps","_this3","match","params","postsStart","postId","_this4","_this5","toConsumableArray","data","numberPage","selected","history","push","lib_default","isOpen","onRequestClose","style","PostsModalComment","react_loader_spinner_default","color","posts_components_UserModal","posts_components_PostsTable","dist_default","previousLabel","nextLabel","forcePage","breakLabel","breakClassName","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","subContainerClassName","activeLinkClassName","pageLinkClassName","previousClassName","nextClassName","withRouter","CreatePostButton","HomePage","components_Title","create_post_CreatePostButton","posts_Posts","Post","postLoad","getPost","getPostComments","Promise","all","result","MySwal","withReactContent","Swal","CreatePost","input","textarea","onChangeInput","onChangetextarea","validationForm","event","target","value","preventDefault","fire","text","position","showConfirmButton","timer","textAlign","margin","htmlFor","onChange","rows","App","basename","process","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.085c9ddb.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Title = props => <h1 className=\"title\">{props.children}</h1>;\r\n\r\nexport default Title;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst PostsTable = props => {\r\n  return (\r\n    <table className=\"posts-table\">\r\n      <thead>\r\n        <tr className=\"posts-table__title\">\r\n          <th>ID</th>\r\n          <th>Title</th>\r\n          <th>Coments</th>\r\n          <th>Author</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {props.posts.map(post => (\r\n          <tr key={post.id} className=\"posts-table__info\">\r\n            <td>{post.id}</td>\r\n            <td>\r\n              <Link to={`/posts/${post.id}`}>{post.title}</Link>\r\n            </td>\r\n            <td onClick={() => props.openCommentModal(post.id)} className=\"posts-table__comments\">\r\n              Open comments\r\n            </td>\r\n            <td onClick={() => props.openUserModal(post.userId)} className=\"posts-table__user\">\r\n              UserId: {post.userId}\r\n            </td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default PostsTable;\r\n","import React from 'react';\r\n\r\nconst PostModalComment = props => {\r\n  return props.postComments.map(comment => (\r\n    <div key={comment.id}>\r\n      <div className=\"col-md-12 col-sm-10 comments-modal\">\r\n        <div className=\"panel panel-default arrow left\">\r\n          <div className=\"panel-body\">\r\n            <header className=\"text-left\">\r\n              <div className=\"comment-user\">Author: {comment.email}</div>\r\n            </header>\r\n            <div className=\"comment-post\">\r\n              <p>{comment.body}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ));\r\n};\r\n\r\nexport default PostModalComment;\r\n","import React from 'react';\r\n\r\nclass UserModal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      addressVisibility: false,\r\n      companyVisibility: false,\r\n    };\r\n\r\n    this.companyVisibilityInfo = this.companyVisibilityInfo.bind(this);\r\n    this.addressVisibilityInfo = this.addressVisibilityInfo.bind(this);\r\n  }\r\n\r\n  companyVisibilityInfo() {\r\n    this.setState(prevState => ({\r\n      companyVisibility: !prevState.companyVisibility,\r\n    }));\r\n  }\r\n\r\n  addressVisibilityInfo() {\r\n    this.setState(prevState => ({\r\n      addressVisibility: !prevState.addressVisibility,\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    const { addressVisibility, companyVisibility } = this.state;\r\n\r\n    const addressInfoStyle = addressVisibility ? 'list-group-item' : 'list-group-item hidden';\r\n    const companyInfoStyle = companyVisibility ? 'list-group-item' : 'list-group-item hidden';\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          {this.props.userInfo.map(user => (\r\n            <div className=\"offset-md-3 col-md-6 user-block\" key={user.name}>\r\n              <ul className=\"list-group  text-center\">\r\n                <li className=\"list-group-item\">Name: {user.name}</li>\r\n                <li className=\"list-group-item\">User name: {user.username}</li>\r\n                <li className=\"list-group-item\">Email: {user.email}</li>\r\n                <li className=\"list-group-item\">Phone: {user.phone}</li>\r\n                <li className=\"list-group-item\">Website: {user.website}</li>\r\n                <li className=\"list-group-item pointer\" onClick={this.addressVisibilityInfo}>\r\n                  Address info\r\n                </li>\r\n                <li className={addressInfoStyle}>City: {user.address.city}</li>\r\n                <li className={addressInfoStyle}>\r\n                  Geo: lat {user.address.geo.lat}, lng {user.address.geo.lng}{' '}\r\n                </li>\r\n                <li className={addressInfoStyle}>Street: {user.address.street}</li>\r\n                <li className={addressInfoStyle}>Suite: {user.address.suite}</li>\r\n                <li className={addressInfoStyle}>Zipcode: {user.address.zipcode}</li>\r\n                <li className=\"list-group-item pointer\" onClick={this.companyVisibilityInfo}>\r\n                  Company info\r\n                </li>\r\n                <li className={companyInfoStyle}>Name: {user.company.name}</li>\r\n                <li className={companyInfoStyle}>Catch Phrase: {user.company.name}</li>\r\n                <li className={companyInfoStyle}>Bs: {user.company.name}</li>\r\n              </ul>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"comment-button\">\r\n          <button onClick={this.props.closeModal} type=\"button\" className=\"btn btn-danger\">\r\n            Close\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserModal;\r\n","import React from 'react';\r\nimport Modal from 'react-modal';\r\nimport Loader from 'react-loader-spinner';\r\nimport ReactPaginate from 'react-paginate';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport PostsTable from './posts_components/PostsTable';\r\nimport PostModalComment from './posts_components/PostsModalComment';\r\nimport UserModal from './posts_components/UserModal';\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: '50%',\r\n    left: '50%',\r\n    right: 'auto',\r\n    bottom: 'auto',\r\n    marginRight: '-50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: '70%',\r\n    height: '80%',\r\n  },\r\n};\r\n\r\nModal.setAppElement('#root');\r\n\r\nclass Posts extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      posts: [],\r\n      postsLoad: false,\r\n      postComments: [],\r\n      postCommentsLoad: false,\r\n      modalCommentsIsOpen: false,\r\n      modalUserIsOpen: false,\r\n      modalUserLoad: false,\r\n      userInfo: [],\r\n      pageCount: 0,\r\n      page: 1,\r\n    };\r\n\r\n    this.baseURL = 'https://jsonplaceholder.typicode.com';\r\n\r\n    this.openCommentModal = this.openCommentModal.bind(this);\r\n    this.closeCommentModal = this.closeCommentModal.bind(this);\r\n    this.openUserModal = this.openUserModal.bind(this);\r\n    this.closeUserModal = this.closeUserModal.bind(this);\r\n    this.handlePageClick = this.handlePageClick.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    let postsStart = 0;\r\n    let postsLimit = 10;\r\n\r\n    fetch(`${this.baseURL}/posts?_start=${postsStart}&_limit=${postsLimit}`)\r\n      .then(response => response.json())\r\n      .then(post =>\r\n        fetch(`${this.baseURL}/posts`)\r\n          .then(response => response.json())\r\n          .then(posts =>\r\n            this.setState({\r\n              postsLoad: true,\r\n              posts: post,\r\n              pageCount: posts.length / 10,\r\n            })\r\n          )\r\n      );\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.state.page !== prevProps.match.params.id) {\r\n      this.setState({\r\n        postsLoad: false,\r\n        page: prevProps.match.params.id,\r\n      });\r\n\r\n      let postsStart = this.props.match.params.id - 1 + '0';\r\n      let postsLimit = 10;\r\n\r\n      fetch(`${this.baseURL}/posts?_start=${postsStart}&_limit=${postsLimit}`)\r\n        .then(response => response.json())\r\n        .then(posts =>\r\n          this.setState({\r\n            posts,\r\n            postsLoad: true,\r\n          })\r\n        );\r\n    }\r\n  }\r\n\r\n  openCommentModal(postId) {\r\n    fetch(`${this.baseURL}/comments?postId=${postId}`)\r\n      .then(response => response.json())\r\n      .then(postComments =>\r\n        this.setState({\r\n          postComments,\r\n          modalCommentsIsOpen: true,\r\n          postCommentsLoad: true,\r\n        })\r\n      );\r\n  }\r\n\r\n  closeCommentModal() {\r\n    this.setState({ modalCommentsIsOpen: false });\r\n  }\r\n\r\n  openUserModal(userId) {\r\n    this.setState({\r\n      userInfo: [],\r\n    });\r\n\r\n    fetch(`${this.baseURL}/users/${userId}`)\r\n      .then(response => response.json())\r\n      .then(user =>\r\n        this.setState({\r\n          modalUserIsOpen: true,\r\n          modalUserLoad: true,\r\n          userInfo: [...this.state.userInfo, user],\r\n        })\r\n      );\r\n  }\r\n\r\n  closeUserModal() {\r\n    this.setState({\r\n      modalUserIsOpen: false,\r\n    });\r\n  }\r\n\r\n  handlePageClick(data) {\r\n    let numberPage = data.selected + 1;\r\n    this.props.history.push(`/posts&page=${numberPage}`);\r\n\r\n    this.setState({\r\n      page: numberPage,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      posts,\r\n      modalCommentsIsOpen,\r\n      postComments,\r\n      postsLoad,\r\n      postCommentsLoad,\r\n      userInfo,\r\n      modalUserIsOpen,\r\n      modalUserLoad,\r\n    } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Modal\r\n          isOpen={modalCommentsIsOpen}\r\n          onRequestClose={this.closeCommentModal}\r\n          style={customStyles}\r\n        >\r\n          {postCommentsLoad ? (\r\n            <PostModalComment postComments={postComments} />\r\n          ) : (\r\n            <Loader type=\"Puff\" color=\"#00BFFF\" height=\"150\" width=\"150\" className=\"spinner\" />\r\n          )}\r\n          <div className=\"comment-button\">\r\n            <button onClick={this.closeCommentModal} type=\"button\" className=\"btn btn-danger\">\r\n              Close\r\n            </button>\r\n          </div>\r\n        </Modal>\r\n\r\n        <Modal isOpen={modalUserIsOpen} onRequestClose={this.closeUserModal} style={customStyles}>\r\n          {modalUserLoad ? (\r\n            <UserModal closeModal={this.closeUserModal} userInfo={userInfo} />\r\n          ) : (\r\n            <Loader type=\"Puff\" color=\"#00BFFF\" height=\"150\" width=\"150\" className=\"spinner\" />\r\n          )}\r\n        </Modal>\r\n\r\n        {postsLoad ? (\r\n          <div>\r\n            <PostsTable\r\n              posts={posts}\r\n              openCommentModal={this.openCommentModal}\r\n              openUserModal={this.openUserModal}\r\n            />\r\n\r\n            <ReactPaginate\r\n              previousLabel=\"<\"\r\n              nextLabel=\">\"\r\n              forcePage={+this.state.page - 1}\r\n              breakLabel={'...'}\r\n              breakClassName={'break-me'}\r\n              pageCount={this.state.pageCount}\r\n              marginPagesDisplayed={2}\r\n              pageRangeDisplayed={5}\r\n              onPageChange={this.handlePageClick}\r\n              containerClassName={'pagination'}\r\n              subContainerClassName={'pages pagination'}\r\n              activeLinkClassName={'active-page'}\r\n              pageLinkClassName={'page-links'}\r\n              previousClassName={'previous-arrow'}\r\n              nextClassName={'next-arrow'}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <Loader type=\"Puff\" color=\"#00BFFF\" height={150} width={150} className=\"spinner\" />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Posts);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst CreatePostButton = () => {\r\n  return (\r\n    <div className=\"create-post-button-wrapper\">\r\n      <Link to=\"/create-post\">\r\n        <button className=\"btn btn-primary create-post-button\">Create Post</button>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreatePostButton;\r\n","import React from 'react';\r\n\r\nimport Title from './Title';\r\nimport Posts from './posts/Posts';\r\nimport CreatePostButton from './create-post/CreatePostButton';\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <div>\r\n      <Title>Posts</Title>\r\n      <CreatePostButton />\r\n      <Posts />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nclass Post extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      post: [],\r\n      postLoad: false,\r\n      postComments: [],\r\n    };\r\n\r\n    this.baseURL = 'https://jsonplaceholder.typicode.com';\r\n    this.postId = props.match.params.id;\r\n    this.getPost = this.getPost.bind(this);\r\n    this.getPostComments = this.getPostComments.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let result = await Promise.all([this.getPost(), this.getPostComments()]);\r\n\r\n    this.setState(prevState => {\r\n      return {\r\n        post: [...prevState.post, result[0]],\r\n        postComments: result[1],\r\n        postLoad: true,\r\n      };\r\n    });\r\n  }\r\n\r\n  getPost() {\r\n    return fetch(`${this.baseURL}/posts/${this.postId}`).then(response => response.json());\r\n  }\r\n\r\n  getPostComments() {\r\n    return fetch(`${this.baseURL}/comments?postId=${this.postId}`).then(response =>\r\n      response.json()\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { post, postComments, postLoad } = this.state;\r\n\r\n    return (\r\n      <div className=\"post\">\r\n        <Link to=\"/\" className=\"post__title\">\r\n          Home Page\r\n        </Link>\r\n        {postLoad ? (\r\n          <div>\r\n            {post.map(post => (\r\n              <div key={post.id} className=\"post__info\">\r\n                <h3>{post.title}</h3>\r\n                <p>{post.body}</p>\r\n              </div>\r\n            ))}\r\n            <div className=\"card-comments\">\r\n              {postComments.map(comment => (\r\n                <div key={comment.id} className=\"card border-dark col-8 col-md-6 col-lg-4 col-xl-3\">\r\n                  <div className=\"card-header text-center\">{comment.email}</div>\r\n                  <div className=\"card-body text-dark\">\r\n                    <h5 className=\"card-title\">{comment.name}</h5>\r\n                    <p className=\"card-text\">{comment.body}</p>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <Loader type=\"Puff\" color=\"#00BFFF\" height={150} width={150} className=\"spinner\" />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nclass CreatePost extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      input: '',\r\n      textarea: '',\r\n    };\r\n\r\n    this.onChangeInput = this.onChangeInput.bind(this);\r\n    this.onChangetextarea = this.onChangetextarea.bind(this);\r\n    this.validationForm = this.validationForm.bind(this);\r\n  }\r\n\r\n  onChangeInput(event) {\r\n    this.setState({\r\n      input: event.target.value,\r\n    });\r\n  }\r\n\r\n  onChangetextarea(event) {\r\n    this.setState({\r\n      textarea: event.target.value,\r\n    });\r\n  }\r\n\r\n  validationForm(event) {\r\n    const { input, textarea } = this.state;\r\n\r\n    event.preventDefault();\r\n\r\n    if (input.length < 3 || textarea < 3) {\r\n      MySwal.fire({\r\n        type: 'error',\r\n        title: 'Oops...',\r\n        text: 'You need to write more text or title',\r\n      });\r\n    } else {\r\n      Swal.fire({\r\n        position: 'center',\r\n        type: 'success',\r\n        title: 'Your post has been added',\r\n        showConfirmButton: false,\r\n        timer: 2000,\r\n      }).then(() => this.props.history.push(`/`));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"create\">\r\n        <h1 style={{ textAlign: 'center', margin: '20px 0' }}>Create Post</h1>\r\n        <form className=\"create__form\">\r\n          <div className=\"form-group col-auto\">\r\n            <div className=\"create__title-block\">\r\n              <label htmlFor=\"title\">Title:</label>\r\n              <input\r\n                onChange={this.onChangeInput}\r\n                value={this.state.input}\r\n                id=\"title\"\r\n                className=\"create__input\"\r\n              />\r\n            </div>\r\n            <div className=\"create__text-block\">\r\n              <label htmlFor=\"Comment\">Comment:</label>\r\n              <textarea\r\n                onChange={this.onChangetextarea}\r\n                value={this.state.textarea}\r\n                className=\"form-control create__textarea\"\r\n                id=\"Comment\"\r\n                rows=\"3\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"create__buttons\">\r\n            <button className=\"btn btn-success create__buttons-save\" onClick={this.validationForm}>\r\n              Save\r\n            </button>\r\n            <Link to=\"/\">\r\n              <button className=\"btn btn-danger create__buttons-cancel\">Cancel</button>\r\n            </Link>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreatePost;\r\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport HomePage from './components/HomePage';\nimport Post from './components/posts/posts_components/Post';\nimport CreatePost from './components/create-post/CreatePost';\n\nconst App = () => {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <div>\n        <Switch>\n          <Route exact path=\"/posts/:id\" component={Post} />\n          <Route path=\"/create-post\" component={CreatePost} />\n          <Route path=\"/posts&page=:id\" component={HomePage} />\n          <Route path=\"/\" component={HomePage} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}